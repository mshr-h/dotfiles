snippet     reg
abbr        reg reg_name;
  reg ${1};

snippet     rega
abbr        reg [N:0] reg_name;
  reg [${1}:${2}] ${3};

snippet     wire
abbr        wire wire_name;
  wire ${1};

snippet     wirea
abbr        wire [N:0] wire_name;
  wire [${1}:${2}] ${3};

snippet     tb
abbr        testbench
  \`include "${1}.v"
  \`default_nettype none

  module tb_$2;
  reg rst_n;
  reg clk;

  $2 ${3:_$2}
  (
    .rst_n (rst_n),
    .clk (clk)
  );

  parameter CLK_PERIOD = 10.0;
  always #(CLK_PERIOD/2) clk <= ~clk;

  initial begin
    $dumpfile("tb_$2.vcd");
    $dumpvars(0, tb_$2);
  end

  initial begin
    #1 rst_n<=1'bx;clk<=1'bx;
    #(CLK_PERIOD)   rst_n<=1;
    #(CLK_PERIOD*3) rst_n<=0;clk<=0;
    repeat(5) @(posedge clk);
    rst_n<=1;
    @(posedge clk);
    repeat(2) @(posedge clk);
    $finish(2);
  end

  endmodule
  \`default_nettype wire

